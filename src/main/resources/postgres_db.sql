-- drop table if exists users_courses;
drop table if exists passports;
drop table if exists users;

create table if not exists users
(
    id       BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    username CHARACTER VARYING(100)                  NOT NULL,
    email    CHARACTER VARYING(100)                  NOT NULL,
    CONSTRAINT user_pk PRIMARY KEY (id)
);

create table if not exists passports
(
    id         BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name       CHARACTER VARYING(100)                  NOT NULL,
    surname    CHARACTER VARYING(100)                  NOT NULL,
    patronymic CHARACTER VARYING(100)                  NOT NULL,
    birthday   CHARACTER VARYING(100)                  NOT NULL,
    address    CHARACTER VARYING(200)                  NOT NULL,
    user_id    BIGINT UNIQUE                           NOT NULL,
    CONSTRAINT passport_pk PRIMARY KEY (id),
    CONSTRAINT user_fk FOREIGN KEY (user_id) REFERENCES users (id) ON DELETE CASCADE

);


-- create table if not exists courses
-- (
--     id              BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
--     name            CHARACTER VARYING(100)                  NOT NULL,
--     price           DOUBLE PRECISION                        NOT NULL CHECK ( price >= 0 ),
--     months_duration SMALLINT                                NOT NULL CHECK ( price > 0 ),
--     CONSTRAINT course_pk PRIMARY KEY (id)
-- );


-- create table if not exists users_courses
-- (
--     user_id   BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
--     course_id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
--     CONSTRAINT user_course_pk PRIMARY KEY (user_id, course_id),
--     CONSTRAINT user_fk FOREIGN KEY (user_id) REFERENCES users (id),
--     CONSTRAINT course_fk FOREIGN KEY (course_id) REFERENCES courses (id)
-- );

INSERT INTO users(username, email)
VALUES ('stasonpokemon', 'stasonpokemon@icloud.com');
INSERT INTO users(username, email)
VALUES ('test', 'test');
INSERT INTO users(username, email)
VALUES ('test2', 'test3');

INSERT INTO passports(name, surname, patronymic, birthday, address, user_id)
VALUES ('Stanislau', 'Trebnikau', 'Andreevich', '13-07-2001', 'Vitebsk', 1);
INSERT INTO passports(name, surname, patronymic, birthday, address, user_id)
VALUES ('test', 'test', 'test', '13-07-2011', 'test', 2);
INSERT INTO passports(name, surname, patronymic, birthday, address, user_id)
VALUES ('qwe', 'qwe', 'qew', '13-07-2011', 'qwe', 3);



SELECT U.id,
       U.username,
       U.email,
       P.id,
       P.name,
       P.surname,
       P.patronymic,
       P.birthday,
       P.address
FROM users AS U
         LEFT JOIN passports AS P ON U.id = P.id
WHERE U.id = 1;

SELECT U.id,
       U.username,
       U.email,
       P.id as pid,
       P.name,
       P.surname,
       P.patronymic,
       P.birthday,
       P.address
FROM users AS U
         LEFT JOIN passports AS P ON U.id = P.id;
